---
- name: "Update Pacman Cache on {{ inventory_hostname }}"
  community.general.pacman:
    update_cache: true

- name: "Update all Pacman packages on {{ inventory_hostname }}"
  community.general.pacman:
    upgrade: true
    upgrade_extra_args: "--noconfirm --needed"
  register: pacman_results

- name: "Update all AUR packages on {{ inventory_hostname }}"
  community.general.pacman:
    upgrade: true
    executable: paru
    upgrade_extra_args: "--noconfirm --needed"
  register: paru_results

- name: "Send Notification to Discord that {{ inventory_hostname }} was Patched"
  community.general.discord:
    webhook_id: "{{ discord_webhook_id }}"
    webhook_token: "{{ discord_webhook_token }}"
    embeds:
      - title: "üëç {{ inventory_hostname }} was patched üëç"
        color: 1127128
        fields:
          - name: Hostname
            value: "{{ inventory_hostname }}"
          - name: IP Address
            value: "{{ ansible_host }}"
  when:
    - pacman_results.changed or
      paru_results.changed

- name: "Send Notification to Discord that {{ inventory_hostname }} was Not Patched"
  community.general.discord:
    webhook_id: "{{ discord_webhook_id }}"
    webhook_token: "{{ discord_webhook_token }}"
    embeds:
      - title: "üëç No Patches were Required on {{ inventory_hostname }} üëç"
        color: 65280
        fields:
          - name: Hostname
            value: "{{ inventory_hostname }}"
          - name: IP Address
            value: "{{ ansible_host }}"
  when:
    - not pacman_results.changed
    - not paru_results.changed

- name: Check if a Reboot is Required
  ansible.builtin.command: /usr/bin/needrestart
  register: reboot_required
  changed_when: no

- name: "Reboot the {{ inventory_hostname }}"
  ansible.builtin.reboot:
    post_reboot_delay: 30
  register: rebooted
  when:
    - "'Running kernel seems to be up-to-date.' not in reboot_required.stdout"
    - "'No services need to be restarted.' not in reboot_required.stdout"
    - not inventory_hostname in groups["devices_net"]

- name: "Send Notification to Discord that {{ inventory_hostname }} needs to be Rebooted"
  community.general.discord:
    webhook_id: "{{ discord_webhook_id }}"
    webhook_token: "{{ discord_webhook_token }}"
    embeds:
      - title: "‚úÖ {{ inventory_hostname }} needs to be rebooted ‚úÖ"
        color: 65280
        fields:
          - name: Hostname
            value: "{{ inventory_hostname }}"
          - name: IP Address
            value: "{{ ansible_host }}"
  when:
    - "'Running kernel seems to be up-to-date.' not in reboot_required.stdout"
    - "'No services need to be restarted.' not in reboot_required.stdout"
    - inventory_hostname in groups["devices_net"]
